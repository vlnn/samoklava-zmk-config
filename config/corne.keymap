/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define LWR LOWER
#define RSE RAISE
#define ADJ ADJUST

&mt {
    quick-tap-ms = <180>;
    tapping-term-ms = <250>;
};

&lt {
    quick_tap_ms = <200>;
    tapping-term-ms = <180>;
};

/ {
        behaviors {
            //                 Key positions
            //       0  1  2  3  4  5    6  7  8  9 10 11
            //      12 13 14 15 16 17   18 19 20 21 22 23
            //      24 25 26 27 28 29   30 31 32 33 34 35
            //               36 37 38   39 40 41

            hml: homerow_mods_left {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS_LEFT";
                #binding-cells = <2>;
                flavor = "tap-preferred";
                tapping-term-ms = <250>;
                quick-tap-ms = <180>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <
                                         6  7  8  9 10
                       13 14 15 16      18 19 20 21 22
                          26            30 31 32 33 34
                             36 37 38   39 40 41
                    >;    // <---[[right-hand keys + all homerow mods + all thumbs]]
            };

            hmr: homerow_mods_right {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS_RIGHT";
                #binding-cells = <2>;
                flavor = "tap-preferred";
                tapping-term-ms = <250>;
                quick-tap-ms = <180>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <
                        1  2  3  4  5
                       13 14 15 16 17      19 20 21 22
                       25 26 27 28 29            33
                             36 37 38   39 40 41
                    >;    // <---[[left-hand keys + all homerow mods + all thumbs]]
            };
        };

        Combos {
           compatible = "zmk,combos";
           combo_lpar {
              timeout-ms = <50>;
              key-positions = <25 26>;
              bindings = <&kp LPAR>;
           };

           combo_rpar {
              timeout-ms = <50>;
              key-positions = <33 34>;
              bindings = <&kp RPAR>;
           };
        };

        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <LOWER RAISE>;
                then-layer = <ADJUST>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &none &kp Q        &kp W         &kp E        &kp R         &kp T             &kp Y         &kp U            &kp I           &kp O            &kp P          &none
   &none &hml LALT A  &hml LCMD S   &hml LCTRL D &hml LSHFT F  &kp G             &kp H         &hmr RSHFT J     &hmr RCTRL K    &hmr RCMD L      &hmr RALT SEMI &none
   &none &kp Z        &hml LALT X   &kp C        &kp V         &kp B             &kp N         &kp M            &kp COMMA       &hmr LALT DOT    &kp FSLH       &none
                                    &lt RSE BSPC &lt LWR ESC   &kp SPACE         &mt RSHFT RET &lt RSE RET      &lt LWR SPACE
                        >;
                };
                lower_layer {
                        bindings = <
   &none &kp N1       &kp N2       &kp N3        &kp N4        &kp N5            &kp N6        &kp N7           &kp N8           &kp N9          &kp N0          &none
   &none &kp LALT     &kp LCMD     &kp LCTRL     &kp LSHFT     &none             &none         &hmr RSHFT LEFT  &hmr RCTRL DOWN  &hmr RALT UP    &hmr RCMD RIGHT &none
   &none &none        &kp LALT     &none         &kp Y         &none             &kp HOME      &caps_word       &kp PG_DN        &kp PG_UP       &hmr LALT END   &none
                                   &lt RSE BSPC  &lt LWR ESC   &kp SPACE         &mt RSHFT RET &mo RSE          &lt LWR SPACE
                        >;
                };
                raise_layer {
                        bindings = <
   &none &kp EXCL     &kp AT       &kp HASH      &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPS         &kp KP_MULTIPLY  &kp LPAR        &kp RPAR       &none
   &none &hml LCMD F1 &hml RALT F2 &hml LCTRL F3 &hml LSHFT F4 &kp F5            &kp MINUS     &hmr RSHFT EQUAL &hmr RCTRL LBKT  &hmr RALT RBKT  &hmr RCMD BSLH &none
   &none &kp F6       &hml LALT F7 &kp F8        &kp F9        &kp F10           &kp UNDER     &kp PLUS         &kp LBRC         &kp RBRC        &kp PIPE       &none
                                   &lt RSE BSCP  &mo LWR       &kp GRAVE         &mt RSHFT RET &lt RSE RET      &lt LWR SPACE
                        >;
                };
                adjust_layer {
                        bindings = <
   &none &bt BT_CLR   &none        &none         &none         &none             &none         &kp K_MUTE       &none            &none           &bootloader    &none
   &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &kp C_BRI_UP  &kp C_VOL_UP     &none            &none           &reset         &none
   &none &none        &none        &none         &none         &none             &kp C_BRI_DN  &kp C_VOL_DN     &none            &none           &none          &none
                                   &none         &none         &none             &none         &none            &none
                        >;
                };
        };
};
